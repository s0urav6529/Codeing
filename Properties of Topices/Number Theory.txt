********************* Property 1 ********************************************

যদি  P একটি প্রাইম সংখ্যা হয় তবে p*2*2*…*2 এবং p*3*3*3…*3  এর GCD অবশ্যই হবে p হবে। 
এখানে আমরা ২ এর স্থানে অন্যকোন প্রাইম এবং ৩ এর স্থানে অন্যকোন প্রাইম বসাতে পারি। 
gcd( p*x*x*x , p*y*y*y*y)==p    ;   where ( x ≠ y ) and { x and y must be prime }.

********************* Property 2 ********************************************

gcd(a,b)= gcd (b, a%b) =gcd (b, |a-b|) = gcd (a ,|a-b|).    ///description in notekhata

******************** Property 3 ***************************************************

Any array’s gcd contains the common divisors of all the array elements.

********************** Prime factorization properties ************************

 loop from 2 to sqrt(n) will give the prime factorization of any numbers.

**************** Property 4 ****************

 if ( a % b ) > ( b % a)  
 then a < b and (a%b) will return actual value of a.
 else a > b and (b%a) will return actual value of b.
 
 Example : Chocolate Bunny : https://codeforces.com/contest/1407/problem/C


********************** Number of Different GCD of An Array of all subsequence:  O ( n*log*n ) *************************

    int n,mx=1;
    cin>>n;
    int a[n+1];
    set<int>ans;
    for(int i=1;i<=n;i++)
    {
        cin>>a[i];
        umax(mx,a[i]);
    }
    bool vis[mx+1];

    for(int i=1;i<=mx;i++) vis[i]=0;

    for(int i=1;i<=n;i++)
    {
        vis[a[i]]=1;
    }

    for(int i=1;i<=mx;i++){
        int gcd=0;
        if(vis[i]) ans.insert(i);

        else{                 ///here we calculate can we get this as a gcd
            for(int j=i+i;j<=mx;j+=i){
                if(vis[j]){
                    gcd=__gcd(gcd,j);
                }
            }
        }
        if(gcd>0) ans.insert(gcd);
    }   
   cout<<ans.size()<<endl;

************************ Number of Common Divisor of an array ************************************

    int n;
    cin>>n;
    ll GCD=0;
    for(int i=0;i<n;i++) {
       ll x;
       cin>>x;
       GCD=__gcd(GCD,x);    ///calculating the average gcd
    }
    ll cnt=0;
    for(ll i=1;i*i<=GCD;i++){   
       if(GCD%i==0){
          cnt++;
          if(i*i!=GCD) cnt++;
        }
    }
    cout<<cnt<<endl;
    

*************** Count the number of triples (i, j, k) of an array
                such that ( 1 ≤ i < j < k ≤ N ) and GCD(ai, aj, ak) = 1 *************************************************
   
    int n;    ///frequency array fre and gcd array gcd_a declared globally
    cin>>n;
    int max_ele=1;
    for(int i=1;i<=n;i++){
        int x;
        cin>>x;
        fre[x]++;
        umax(max_ele,x);
    }

    for(int i=1;i<=max_ele;i++){  ///searching all the gcd multiple

        for(int j=i;j<=max_ele;j+=i)
            gcd_a[i]+=fre[j];   /// adding all the multiple of i

        gcd_a[i]=nC3(gcd_a[i]);   ///if pair then nC2 and so on.

    }

    for(int i=max_ele;i>=1;i--){

        for(int j=i*2;j<=max_ele;j+=i)
            gcd_a[i]-=gcd_a[j];      ///deleting those triplets whose gcd is not i

    }
    cout<<gcd_a[1];  ///printing gcd that wants.
 
********************** ১ থেকে n পর্যন্ত সংখ্যাকে মিনিমাম কয়ভাগে ভাগ করা যাবে ,যেখানে প্রত্যেক সংখ্যা পেয়ারওয়াইজ কো-প্রাইম হবে? **********************

Answer: n/2 group.  Example: (1, 2, 3) (4, 5) (6 , 7) and so on.
    
********************** Represent n as a sum of K prime number(distinct or not) *******************************

For K=1              n must be prime.
For K=2              If n is Even by Goldbach Conjecture it is possible.

If n is odd then (N-2) must be prime otherwise not.
For K>=3…… prove always yes.

********************** GoldBach's Conjecture ****************

Every even integer greater than 2 can be expressed as a sum of 2 prime numbers.

For k>=3                                            For k>=3

when n is even                                      when n is odd

n-2*(k-2) is also even                              n-3-2*(k-3) is also even
and hence Goldbach's Conjecture applies             and hence Goldbach's Conjecture applies. 



